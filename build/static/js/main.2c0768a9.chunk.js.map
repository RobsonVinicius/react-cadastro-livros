{"version":3,"sources":["Header/index.js","Table/index.js","FormValidator/index.js","Form/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","style","backgroundColor","href","TableHead","scope","TableBody","props","lines","authors","map","line","index","key","name","book","price","onClick","removeAuthor","Table","_this$props","this","Table_TableHead","Table_TableBody","Component","FormValidator","validation","Object","classCallCheck","state","fieldValue","field","toString","methodValidation","validator","method","console","log","Form","_this","possibleConstructorReturn","getPrototypeOf","call","inputListener","event","_event$target","target","value","setState","defineProperty","submitForm","validate","submitListener","stateInitial","_this$state","htmlFor","placeholder","id","type","onChange","App","filter","author","currentpos","concat","toConsumableArray","react","src_Header","src_Table","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c0768a9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./styles.css\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark\" style={{backgroundColor: '#563d7c'}}>\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"/\">Biblioteca Digital</a> \r\n        <ul className=\"nav justify-content-end\" >\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link nav-link-color active\" href=\"/\">Autores</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link nav-link-color\" href=\"/\">Livros</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link nav-link-color\" href=\"/\">Sobre</a>\r\n          </li>\r\n        </ul>\r\n      </div>      \r\n    </nav>\r\n      );\r\n    }\r\n        \r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst TableHead = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Autores</th>\r\n        <th scope=\"col\">Livros</th>\r\n        <th scope=\"col\">Preços</th>\r\n        <th scope=\"col\">Remover</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nconst TableBody = props => {\r\n  const lines = props.authors.map((line, index)=>{\r\n    return( \r\n      <tr className=\"t-row\" key={index}>\r\n        <td>{line.name}</td>\r\n        <td>{line.book}</td>\r\n        <td>{line.price}</td>\r\n        <td><button className=\"btn btn-outline-danger\" onClick={ () => props.removeAuthor(index)} >Remover</button></td>\r\n      </tr>\r\n    );\r\n });\r\n\r\n return(\r\n     <tbody>\r\n       {lines}\r\n     </tbody>\r\n );\r\n}\r\n \r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { authors, removeAuthor } = this.props;    \r\n\r\n    return (\r\n      <table className=\"table text-center mt-5\">\r\n        <TableHead />\r\n        <TableBody authors = { authors } removeAuthor = { removeAuthor } />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table; ","import validator from 'validator';\r\n\r\nclass FormValidator {\r\n\r\n  constructor(validation) {\r\n    this.validation = validation;\r\n  }\r\n\r\n  validate(state) {\r\n    const fieldValue = state[this.validation.field.toString()];\r\n    const methodValidation = validator[this.validation.method];\r\n    if(methodValidation(fieldValue, [], state)) {\r\n      console.log('Formulário Inválido');\r\n      return false;\r\n    } else {\r\n        console.log('Formulário Valido');\r\n        return true;\r\n    }         \r\n  }\r\n}\r\n\r\nexport default FormValidator;","import React, { Component } from 'react';\r\n\r\nimport \"./styles.css\";\r\n\r\nimport FormValidator from '../FormValidator'; \r\n\r\nclass Form extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.validator = new FormValidator({\r\n      field: 'name',\r\n      method: 'isEmpty'\r\n    })\r\n\r\n    this.stateInitial = {\r\n      name:'',\r\n      book: '', \r\n      price: '',\r\n    }\r\n\r\n    this.state = this.stateInitial;\r\n\r\n  }\r\n\r\n  inputListener = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  } \r\n\r\n  submitForm = () => {\r\n    if(this.validator.validate(this.state)) {\r\n      this.props.submitListener(this.state);\r\n      this.setState(this.stateInitial);\r\n    } else {\r\n      console.log('Submit Bloqueado');\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    const { name, book, price } = this.state;\r\n\r\n    return (\r\n      <form className=\"form-inline justify-content-center mt-5\">\r\n        <div className=\"row \">\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"name\" className=\"col-form-label\"></label>\r\n            <input \r\n              className=\"form-control\"\r\n              placeholder=\"Nome\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name} \r\n              onChange = {this.inputListener} />      \r\n          </div>\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"book\" className=\"col-form-label\"></label>\r\n            <input \r\n              className=\"form-control\"\r\n              placeholder=\"Livro\"\r\n              id=\"book\"\r\n              type=\"text\"\r\n              name=\"book\"\r\n              value={book}\r\n              onChange = {this.inputListener} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"price\" className=\"col-form-label\"></label>\r\n            <input \r\n              className=\"form-control\"\r\n              placeholder=\"Preço\"\r\n              id=\"price\"\r\n              type=\"text\"\r\n              name=\"price\" \r\n              value={price}\r\n              onChange = {this.inputListener} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button className=\"btn btn-outline-success btn-save\" onClick={this.submitForm} type=\"button\">Salvar</button>\r\n          </div>\r\n        </div>\r\n        \r\n\r\n      </form>\r\n    )\r\n  };  \r\n}\r\n\r\n\r\nexport default Form;","import React, { Component, Fragment } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Header from './Header';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    authors: [\r\n      {\r\n        name: 'Robson Vinicius',\r\n        book: 'React',\r\n        price: '59.90'\r\n\r\n      },\r\n      {\r\n        name: 'Andressa Santos',\r\n        book: 'Java',\r\n        price: '99.80'\r\n      }, \r\n      {\r\n        name: 'Marcos Fontes',\r\n        book: 'Design',\r\n        price: '149.90'\r\n      }, \r\n      {\r\n        name: 'Fernanda Regina',\r\n        book: 'DevOps',\r\n        price: '100.50'\r\n      },\r\n      {\r\n        name: 'Carina Fragozo',\r\n        book: 'English in Brazil',\r\n        price: '99.90'\r\n      }\r\n    ],\r\n  };\r\n\r\n  removeAuthor = (index) => {\r\n    const { authors } = this.state;\r\n\r\n    this.setState(\r\n      {\r\n        authors: authors.filter((author, currentpos) => {                    \r\n          return currentpos !== index;\r\n        }),   \r\n      }\r\n    );\r\n  }\r\n\r\n  submitListener = author => {\r\n    this.setState({ authors: [...this.state.authors, author] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header/>\r\n        <div className=\"container\">          \r\n          <Table authors = { this.state.authors } removeAuthor = { this.removeAuthor } />\r\n          <Form submitListener={ this.submitListener } />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}