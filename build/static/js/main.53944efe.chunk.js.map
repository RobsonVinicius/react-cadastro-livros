{"version":3,"sources":["Header/index.js","Table/index.js","FormValidator/index.js","PopUp/index.js","Form/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","style","backgroundColor","href","TableHead","scope","TableBody","props","lines","authors","map","line","index","key","name","book","price","onClick","removeAuthor","Table","_this$props","this","Table_TableHead","Table_TableBody","Component","FormValidator","validations","Object","classCallCheck","state","validation","valid","forEach","rule","fieldValue","field","toString","args","method","validator","apply","concat","toConsumableArray","validWhen","isInvalid","message","isValid","objectSpread","PopUp","displayMessage","status","msg","Swal","fire","title","text","type","timer","confirmButtonText","Form","_this","possibleConstructorReturn","getPrototypeOf","call","inputListener","event","_event$target","target","value","setState","defineProperty","submitForm","validate","submitListener","stateInitial","filter","elem","min","max","_this$state","htmlFor","placeholder","id","onChange","App","author","currentpos","react","src_Header","src_Table","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yLAyBeA,eArBA,WACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAACC,gBAAiB,YAC3DL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAjC,sBACAN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCG,KAAK,KAAnD,YAEFN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BG,KAAK,KAA5C,WAEFN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BG,KAAK,KAA5C,eCbNC,SAAY,WAChB,OACEP,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIM,MAAM,OAAV,WACAR,EAAAC,EAAAC,cAAA,MAAIM,MAAM,OAAV,UACAR,EAAAC,EAAAC,cAAA,MAAIM,MAAM,OAAV,aACAR,EAAAC,EAAAC,cAAA,MAAIM,MAAM,OAAV,eAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAQD,EAAME,QAAQC,IAAI,SAACC,EAAMC,GACrC,OACEf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQa,IAAKD,GACzBf,EAAAC,EAAAC,cAAA,UAAKY,EAAKG,MACVjB,EAAAC,EAAAC,cAAA,UAAKY,EAAKI,MACVlB,EAAAC,EAAAC,cAAA,UAAKY,EAAKK,OACVnB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBiB,QAAU,kBAAMV,EAAMW,aAAaN,KAA9E,eAKX,OACIf,EAAAC,EAAAC,cAAA,aACGS,IAmBOW,mLAZJ,IAAAC,EAC2BC,KAAKd,MAA/BE,EADDW,EACCX,QAASS,EADVE,EACUF,aAEjB,OACErB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACfH,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,CAAWd,QAAYA,EAAUS,aAAiBA,YAPtCM,sDCOLC,aAxCb,SAAAA,EAAYC,GAAcC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,GACxBJ,KAAKK,YAAcA,uDAGZG,GAEP,IAAIC,EAAaT,KAAKU,QAmBtB,OAjBAV,KAAKK,YAAYM,QAAQ,SAAAC,GAEvB,IAAMC,EAAaL,EAAMI,EAAKE,MAAMC,YAC9BC,EAAOJ,EAAKI,MAAQ,IAEsB,kBAAhBJ,EAAKK,OACrCC,IAAUN,EAAKK,QAAUL,EAAKK,QAEXE,WAAhB,GAAiBN,GAAjBO,OAAAd,OAAAe,EAAA,EAAAf,CAAgCU,GAAhC,CAAsCR,OAAWI,EAAKU,YACvDb,EAAWG,EAAKE,OAAS,CACvBS,WAAW,EACXC,QAASZ,EAAKY,SAEhBf,EAAWgB,SAAU,KAIlBhB,kCAKP,IAAMA,EAAa,GAKnB,OAHAT,KAAKK,YAAYhB,IAAI,SAAAuB,GAAI,OACvBH,EAAWG,EAAKE,OAAS,CAACS,WAAY,EAAOC,QAAS,MAEjDlB,OAAAoB,EAAA,EAAApB,CAAA,CAACmB,SAAS,GAAShB,6BCPfkB,EA9BD,CACZC,eAAgB,SAACC,EAAQC,GACT,YAAXD,GACDE,IAAKC,KAAK,CACRC,MAAO,cACPC,KAAMJ,EACNK,KAAM,UACNC,MAAO,MAGG,UAAXP,GACDE,IAAKC,KAAK,CACRC,MAAO,QACPC,KAAMJ,EACNK,KAAM,QACNC,MAAO,OAGG,WAAXP,GACDE,IAAKC,KAAK,CACRC,MAAO,YACPC,KAAMJ,EACNK,KAAM,UACNC,MAAO,KACPC,kBAAmB,SCkGZC,cApHb,SAAAA,EAAYpD,GAAO,IAAAqD,EAAA,OAAAjC,OAAAC,EAAA,EAAAD,CAAAN,KAAAsC,IACjBC,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAAN,KAAAM,OAAAmC,EAAA,EAAAnC,CAAAgC,GAAAI,KAAA1C,KAAMd,KAmCRyD,cAAgB,SAAAC,GAAS,IAAAC,EACCD,EAAME,OAAtBrD,EADeoD,EACfpD,KAAMsD,EADSF,EACTE,MAEdR,EAAKS,SAAL1C,OAAA2C,EAAA,EAAA3C,CAAA,GACGb,EAAQsD,KAxCMR,EA4CnBW,WAAa,WACX,IAAMzC,EAAa8B,EAAKrB,UAAUiC,SAASZ,EAAK/B,OAE7CC,EAAWgB,SACZc,EAAKrD,MAAMkE,eAAeb,EAAK/B,OAC/B+B,EAAKS,SAAST,EAAKc,eAGJ,CADa5C,EAArBhB,KAAqBgB,EAAff,KAAee,EAATd,OAGU2D,OAAO,SAAAC,GAClC,OAAOA,EAAKhC,YAEAZ,QAAQ,SAAAG,GACpBa,EAAMC,eAAe,QAASd,EAAMU,YAvDxCe,EAAKrB,UAAY,IAAId,EAAc,CACjC,CACAU,MAAO,OACPG,OAAQ,UACRK,WAAW,EACXE,QAAS,0BAET,CACAV,MAAO,OACPG,OAAQ,UACRK,WAAW,EACXE,QAAS,+BAET,CACAV,MAAO,QACPG,OAAQ,QACRD,KAAM,CAAC,CAACwC,IAAK,EAAGC,IAAK,QACrBnC,WAAW,EACXE,QAAS,iCAIXe,EAAKc,aAAe,CAClB5D,KAAK,GACLC,KAAM,GACNC,MAAO,GACPc,WAAY8B,EAAKrB,UAAUR,SAG7B6B,EAAK/B,MAAQ+B,EAAKc,aAhCDd,wEAgEV,IAAAmB,EAEuB1D,KAAKQ,MAA3Bf,EAFDiE,EAECjE,KAAMC,EAFPgE,EAEOhE,KAAMC,EAFb+D,EAEa/D,MAEpB,OACEnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2CACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiF,QAAQ,OAAOhF,UAAU,mBAChCH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACViF,YAAY,OACZC,GAAG,OACH1B,KAAK,OACL1C,KAAK,OACLsD,MAAOtD,EACPqE,SAAY9D,KAAK2C,iBAErBnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiF,QAAQ,OAAOhF,UAAU,mBAChCH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACViF,YAAY,QACZC,GAAG,OACH1B,KAAK,OACL1C,KAAK,OACLsD,MAAOrD,EACPoE,SAAY9D,KAAK2C,iBAErBnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiF,QAAQ,QAAQhF,UAAU,mBACjCH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACViF,YAAY,WACZC,GAAG,QACH1B,KAAK,OACL1C,KAAK,QACLsD,MAAOpD,EACPmE,SAAY9D,KAAK2C,iBAErBnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mCAAmCiB,QAASI,KAAKkD,WAAYf,KAAK,UAApF,oBA3GOhC,aCgEJ4D,6MA7DbvD,MAAQ,CACNpB,QAAS,CACP,CACEK,KAAM,kBACNC,KAAM,QACNC,MAAO,SAGT,CACEF,KAAM,kBACNC,KAAM,OACNC,MAAO,SAET,CACEF,KAAM,gBACNC,KAAM,SACNC,MAAO,UAET,CACEF,KAAM,kBACNC,KAAM,SACNC,MAAO,UAET,CACEF,KAAM,iBACNC,KAAM,oBACNC,MAAO,aAKbE,aAAe,SAACN,GAAU,IAChBH,EAAYmD,EAAK/B,MAAjBpB,QAERmD,EAAKS,SACH,CACE5D,QAASA,EAAQkE,OAAO,SAACU,EAAQC,GAC/B,OAAOA,IAAe1E,MAI5BoC,EAAMC,eAAe,SAAU,iCAGjCwB,eAAiB,SAAAY,GACfzB,EAAKS,SAAS,CAAE5D,QAAO,GAAAgC,OAAAd,OAAAe,EAAA,EAAAf,CAAMiC,EAAK/B,MAAMpB,SAAjB,CAA0B4E,MACjDrC,EAAMC,eAAe,UAAW,yGAIhC,OACEpD,EAAAC,EAAAC,cAACwF,EAAA,SAAD,KACE1F,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC0F,EAAD,CAAOhF,QAAYY,KAAKQ,MAAMpB,QAAUS,aAAiBG,KAAKH,eAC9DrB,EAAAC,EAAAC,cAAC2F,EAAD,CAAMjB,eAAiBpD,KAAKoD,0BAxDpBjD,aCIEmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpG,EAAAC,EAAAC,cAACmG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.53944efe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./styles.css\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark\" style={{backgroundColor: '#563d7c'}}>\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"/\">Biblioteca Digital</a> \r\n        <ul className=\"nav justify-content-end\" >\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link nav-link-color active\" href=\"/\">Autores</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link nav-link-color\" href=\"/\">Livros</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link nav-link-color\" href=\"/\">Sobre</a>\r\n          </li>\r\n        </ul>\r\n      </div>      \r\n    </nav>\r\n      );\r\n    }\r\n        \r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst TableHead = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Autores</th>\r\n        <th scope=\"col\">Livros</th>\r\n        <th scope=\"col\">Pre√ßos</th>\r\n        <th scope=\"col\">Remover</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nconst TableBody = props => {\r\n  const lines = props.authors.map((line, index)=>{\r\n    return( \r\n      <tr className=\"t-row\" key={index}>\r\n        <td>{line.name}</td>\r\n        <td>{line.book}</td>\r\n        <td>{line.price}</td>\r\n        <td><button className=\"btn btn-outline-danger\" onClick={ () => props.removeAuthor(index)} >Remover</button></td>\r\n      </tr>\r\n    );\r\n });\r\n\r\n return(\r\n     <tbody>\r\n       {lines}\r\n     </tbody>\r\n );\r\n}\r\n \r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { authors, removeAuthor } = this.props;    \r\n\r\n    return (\r\n      <table className=\"table text-center mt-5\">\r\n        <TableHead />\r\n        <TableBody authors = { authors } removeAuthor = { removeAuthor } />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table; ","import validator from 'validator';\r\n\r\nclass FormValidator {\r\n\r\n  constructor(validations) {\r\n    this.validations = validations;\r\n  }\r\n\r\n  validate(state) {\r\n\r\n    let validation = this.valid();\r\n\r\n    this.validations.forEach(rule => {\r\n\r\n      const fieldValue = state[rule.field.toString()];\r\n      const args = rule.args || [];\r\n\r\n      const methodValidation = typeof rule.method === 'string' ?\r\n      validator[rule.method] : rule.method\r\n\r\n      if(methodValidation(fieldValue, ...args, state) !== rule.validWhen) {\r\n        validation[rule.field] = {\r\n          isInvalid: true,\r\n          message: rule.message\r\n        }\r\n        validation.isValid = false;\r\n      }        \r\n      \r\n    });\r\n    return validation;\r\n  }\r\n    \r\n\r\n  valid() {\r\n    const validation = {};\r\n\r\n    this.validations.map(rule => (\r\n      validation[rule.field] = {isInvalid : false, message: ''}      \r\n    ));\r\n    return {isValid: true, ...validation};\r\n  }\r\n  \r\n}\r\n\r\nexport default FormValidator;","import Swal from 'sweetalert2';\r\n\r\nconst PopUp = {\r\n  displayMessage: (status, msg) => {\r\n    if(status === 'success') {\r\n      Swal.fire({\r\n        title: 'Cadastrado!',\r\n        text: msg,\r\n        type: 'success',        \r\n        timer: 1000\r\n      })\r\n    }\r\n    if(status === 'error'){\r\n      Swal.fire({\r\n        title: 'Erro!',\r\n        text: msg,\r\n        type: 'error',\r\n        timer: 1500           \r\n      })\r\n    }\r\n    if(status === 'remove') {\r\n      Swal.fire({\r\n        title: 'Removido!',\r\n        text: msg,\r\n        type: 'warning',\r\n        timer: 1500,\r\n        confirmButtonText: 'Ok'        \r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default PopUp;\r\n","import React, { Component } from 'react';\r\nimport \"./styles.css\";\r\n\r\nimport FormValidator from '../FormValidator'; \r\nimport PopUp from '../PopUp';\r\n\r\nclass Form extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.validator = new FormValidator([\r\n      {\r\n      field: 'name',\r\n      method: 'isEmpty',\r\n      validWhen: false,\r\n      message: 'Insira o nome do autor'\r\n      },\r\n      {\r\n      field: 'book',\r\n      method: 'isEmpty',\r\n      validWhen: false,\r\n      message: 'Insira o t√≠tulo do livro'\r\n      },\r\n      {\r\n      field: 'price',\r\n      method: 'isInt',\r\n      args: [{min: 0, max: 99999}], \r\n      validWhen: true,\r\n      message: 'Insira um valor n√∫merico'\r\n      }\r\n    ]);\r\n\r\n    this.stateInitial = {\r\n      name:'',\r\n      book: '', \r\n      price: '',\r\n      validation: this.validator.valid()\r\n    }\r\n\r\n    this.state = this.stateInitial;\r\n\r\n  }\r\n\r\n  inputListener = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  } \r\n\r\n  submitForm = () => {\r\n    const validation = this.validator.validate(this.state);\r\n\r\n    if(validation.isValid) {\r\n      this.props.submitListener(this.state);\r\n      this.setState(this.stateInitial);\r\n    } else {\r\n      const {name, book, price} = validation;\r\n      const fields = [name, book, price];\r\n\r\n      const invalidFields = fields.filter(elem => {\r\n        return elem.isInvalid;\r\n      });\r\n      invalidFields.forEach(field => {\r\n        PopUp.displayMessage('error', field.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    const { name, book, price } = this.state;\r\n\r\n    return (\r\n      <form className=\"form-inline justify-content-center mt-5\">\r\n        <div className=\"row \">\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"name\" className=\"col-form-label\"></label>\r\n            <input \r\n              className=\"form-control\"\r\n              placeholder=\"Nome\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name} \r\n              onChange = {this.inputListener} />      \r\n          </div>\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"book\" className=\"col-form-label\"></label>\r\n            <input \r\n              className=\"form-control\"\r\n              placeholder=\"Livro\"\r\n              id=\"book\"\r\n              type=\"text\"\r\n              name=\"book\"\r\n              value={book}\r\n              onChange = {this.inputListener} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"price\" className=\"col-form-label\"></label>\r\n            <input \r\n              className=\"form-control\"\r\n              placeholder=\"Pre√ßo\"\r\n              id=\"price\"\r\n              type=\"text\"\r\n              name=\"price\" \r\n              value={price}\r\n              onChange = {this.inputListener} />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button className=\"btn btn-outline-success btn-save\" onClick={this.submitForm} type=\"button\">Salvar</button>\r\n          </div>\r\n        </div>\r\n        \r\n\r\n      </form>\r\n    )\r\n  };  \r\n}\r\n\r\n\r\nexport default Form;","import React, { Component, Fragment } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Header from './Header';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\nimport PopUp from './PopUp';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    authors: [\r\n      {\r\n        name: 'Robson Vinicius',\r\n        book: 'React',\r\n        price: '59.90'\r\n\r\n      },\r\n      {\r\n        name: 'Andressa Santos',\r\n        book: 'Java',\r\n        price: '99.80'\r\n      }, \r\n      {\r\n        name: 'Marcos Fontes',\r\n        book: 'Design',\r\n        price: '149.90'\r\n      }, \r\n      {\r\n        name: 'Fernanda Regina',\r\n        book: 'DevOps',\r\n        price: '100.50'\r\n      },\r\n      {\r\n        name: 'Carina Fragozo',\r\n        book: 'English in Brazil',\r\n        price: '99.90'\r\n      }\r\n    ],\r\n  };\r\n\r\n  removeAuthor = (index) => {\r\n    const { authors } = this.state;\r\n\r\n    this.setState(\r\n      {\r\n        authors: authors.filter((author, currentpos) => {                    \r\n          return currentpos !== index;\r\n        }),   \r\n      }\r\n    );\r\n    PopUp.displayMessage('remove', 'Livro Removido com sucesso')\r\n  }\r\n\r\n  submitListener = author => {\r\n    this.setState({ authors: [...this.state.authors, author] });\r\n    PopUp.displayMessage(\"success\", \"Autor Adicionado com sucesso\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header/>\r\n        <div className=\"container\">          \r\n          <Table authors = { this.state.authors } removeAuthor = { this.removeAuthor } />\r\n          <Form submitListener={ this.submitListener } />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}